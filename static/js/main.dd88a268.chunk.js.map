{"version":3,"sources":["components/Card.js","data/data.js","components/Form.js","components/Board.js","components/MyContext.js","components/MyProvider.js","components/StopWatch.js","pages/MemoPage.js","pages/ScoresPage.js","pages/StartPage.js","routers/StartRoutes.js","routers/AppRouter.js","components/App.js","index.js"],"names":["Card","imageUrl","id","cardFound","clickCard","availableToPick","className","onClick","src","alt","urls","responsiveRows","12","xs","sm","24","48","md","Form","totalSeconds","cardsPerRowColumn","history","useHistory","useState","text","setText","onChange","e","target","value","name","seconds","highScores","JSON","parse","localStorage","getItem","push","setItem","stringify","replace","saveTime","preventDefault","Board","context","cards","setCards","selectedCard","setSelectedCard","win","useEffect","console","log","cardsPrev","Array","from","length","selectedurls","i","forEach","url","index","pair","randomNumber","Math","floor","random","pairNumber","timeout","setTimeout","state","map","element","clearTimeout","Object","keys","pairAdded","addPair","correctPairs","style","marginTop","Grid","container","cardProps","item","MyContext","React","createContext","MyProvider","props","Provider","finishedGame","this","children","Stoptwatch","setTotalSeconds","setSeconds","interval","setInterval","clearInterval","MemoPage","location","Consumer","ScoresPage","entries","totalCards","registries","StartPage","selected","setSelected","size","message","imgUrl","elem","display","flexDirection","justifyContent","height","width","color","fontSize","textAlign","to","StartRoutes","exact","path","component","AppRouter","action","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dd88a268.chunk.js","sourcesContent":["import React from 'react'\r\nimport \"../styles/card.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Card = ({ imageUrl, id,cardFound,clickCard,availableToPick }) => {\r\n    {/* <div className=\"card flipped\">\r\n            <div onClick={() => {clickCard(id)}} className={`overlay ${cardFound ? '' : 'cardhide'} ${availableToPick ? '' : 'notavailabletopick'}`}></div>\r\n             <img src={imageUrl} alt=\"\" />\r\n        </div> */}\r\n    return (\r\n<div className=\"scene\">\r\n  <div onClick={() => {clickCard(id)}} className={`card ${cardFound ? '' : 'is-flipped'} ${availableToPick ? '' : 'notavailabletopick'}`}>\r\n        <div className=\"card__face card__face--front\">\r\n        <img src={imageUrl} alt=\"\" />\r\n        </div>\r\n        <div className=\"card__face card__face--back\"></div>\r\n  </div>\r\n</div>\r\n\r\n    );\r\n}\r\n\r\nCard.propTypes = {\r\n    imageUrl: PropTypes.string.isRequired,\r\n    id: PropTypes.number.isRequired,\r\n}\r\n\r\n\r\nexport default Card\r\n","export const urls = [\"https://www.runeterrafire.com/cdn-cgi/image/sharpen=1.0,width=90,quality=70,format=webp/images/cards/source/leblanc.png\",\r\n    \"https://www.runeterrafire.com/cdn-cgi/image/sharpen=1.0,width=90,quality=70,format=webp/images/cards/source/leveled-katarina.png\",\r\n    \"https://www.runeterrafire.com/cdn-cgi/image/sharpen=1.0,width=90,quality=70,format=webp/images/cards/source/leveled-aphelios.png\",\r\n    \"https://www.runeterrafire.com/cdn-cgi/image/sharpen=1.0,width=90,quality=70,format=webp/images/cards/source/karma.png\",\r\n    \"https://www.runeterrafire.com/cdn-cgi/image/sharpen=1.0,width=90,quality=70,format=webp/images/cards/source/leveled-zed.png\",\r\n    \"https://www.runeterrafire.com/cdn-cgi/image/sharpen=1.0,width=90,quality=70,format=webp/images/cards/source/leona.png\",\r\n    \"https://www.runeterrafire.com/cdn-cgi/image/sharpen=1.0,width=90,quality=70,format=webp/images/cards/source/diana.png\",\r\n    \"https://www.runeterrafire.com/cdn-cgi/image/sharpen=1.0,width=90,quality=70,format=webp/images/cards/source/lucian.png\",\r\n    \"https://www.runeterrafire.com/cdn-cgi/image/sharpen=1.0,width=90,quality=85,format=webp/images/cards/source/leveled-kindred.png\",\r\n    \"https://www.runeterrafire.com/cdn-cgi/image/sharpen=1.0,width=90,quality=85,format=webp/images/cards/source/azir.png\",\r\n    \"https://www.runeterrafire.com/cdn-cgi/image/sharpen=1.0,width=90,quality=85,format=webp/images/cards/source/leveled-lux.png\",\r\n    \"https://www.runeterrafire.com/cdn-cgi/image/sharpen=1.0,width=90,quality=85,format=webp/images/cards/source/lee-sin.png\",\r\n    \"https://www.runeterrafire.com/cdn-cgi/image/sharpen=1.0,width=90,quality=85,format=webp/images/cards/source/leveled-fiora.png\",\r\n    \"https://www.runeterrafire.com/cdn-cgi/image/sharpen=1.0,width=90,quality=85,format=webp/images/cards/source/garen.png\",\r\n    \"https://www.runeterrafire.com/cdn-cgi/image/sharpen=1.0,width=90,quality=85,format=webp/images/cards/source/darius.png\",\r\n    \"https://www.runeterrafire.com/cdn-cgi/image/sharpen=1.0,width=90,quality=85,format=webp/images/cards/source/ashe.png\",\r\n    \"https://www.runeterrafire.com/cdn-cgi/image/sharpen=1.0,width=90,quality=85,format=webp/images/cards/source/leveled-jinx.png\",\r\n    \"https://www.runeterrafire.com/cdn-cgi/image/sharpen=1.0,width=90,quality=85,format=webp/images/cards/source/leveled-riven.png\",\r\n    \"https://www.runeterrafire.com/cdn-cgi/image/sharpen=1.0,width=90,quality=85,format=webp/images/cards/source/leveled-shen.png\",\r\n    \"https://www.runeterrafire.com/cdn-cgi/image/sharpen=1.0,width=90,quality=85,format=webp/images/cards/source/leveled-vi.png\",\r\n    \"https://www.runeterrafire.com/cdn-cgi/image/sharpen=1.0,width=90,quality=85,format=webp/images/cards/source/leveled-miss-fortune.png\",\r\n    \"https://www.runeterrafire.com/cdn-cgi/image/sharpen=1.0,width=90,quality=85,format=webp/images/cards/source/gangplank.png\",\r\n    \"https://www.runeterrafire.com/cdn-cgi/image/sharpen=1.0,width=90,quality=85,format=webp/images/cards/source/leveled-braum.png\",\r\n    \"https://www.runeterrafire.com/cdn-cgi/image/sharpen=1.0,width=90,quality=85,format=webp/images/cards/source/nimble-poro.png\"\r\n\r\n]\r\nexport const highScores = {\r\n    12:[],\r\n    24:[],\r\n    48:[]\r\n}\r\n\r\nexport const responsiveRows = {\r\n    12: { xs: 6, sm: 3 },\r\n    24: { xs: 6, sm: 2 },\r\n    48: { xs: 6, sm: 4, md: 1 }\r\n}\r\n","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport {highScores,history} from '../data/data';\r\nconst Form = ({totalSeconds, cardsPerRowColumn}) => {\r\n    const history = useHistory();\r\n    const [text,setText] = useState('');\r\n    const saveTime = ({name,seconds}) => {\r\n        const highScores = JSON.parse(localStorage.getItem(\"highScores\")) || {12:[],24:[],48:[]};\r\n        highScores[cardsPerRowColumn].push({name,seconds});\r\n        localStorage.setItem(\"highScores\",JSON.stringify(highScores));\r\n        history.replace(\"/\");\r\n    } \r\n    const onclickya = (e) => {\r\n        e.preventDefault();\r\n        history.replace(\"/\");\r\n    }\r\n    const handleTextChange = (e) => {\r\n        setText(e.target.value);\r\n    }\r\n    return (\r\n        <div className={`${totalSeconds? 'wingame animate__animated animate__slideInLeft' : 'normalgame'} modal modal-content`}>\r\n        <h1>Ganaste bro {totalSeconds}</h1>\r\n        <h1>Terminaste en {totalSeconds}</h1>\r\n        <h1>Quieres guardar tu tiempo en los mejores tiempos?</h1>\r\n            <input onChange={handleTextChange} value={text}></input>\r\n            <button onClick={() => {saveTime({name:text,seconds:totalSeconds})}}>Guadar tiempo y regresar al menu principal</button>\r\n            <button onClick={onclickya}>Regresar al menu principal</button>\r\n        \r\n    </div>\r\n    )\r\n}\r\nexport default Form;","import React, { useEffect,useState} from 'react'\r\nimport Card from '../components/Card';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { urls, responsiveRows } from '../data/data';\r\nimport {useHistory } from 'react-router-dom';\r\nimport {highScores} from '../data/data';\r\nimport Form from './Form';\r\n\r\n\r\nconst Board = ({ cardsPerRowColumn,context,totalSeconds}) => {\r\n    \r\n    \r\n    const [cards, setCards] = useState([]);\r\n    const [selectedCard,setSelectedCard] = useState({});\r\n    const [finishedGame,win] = useState(false); \r\n  \r\n\r\n    useEffect(() => {\r\n        console.log('Entro al useeffect incial');\r\n        const cardsPrev = Array.from({ length: cardsPerRowColumn });\r\n        const selectedurls = [];\r\n        for (let i = 0; i < (cardsPerRowColumn / 2); i++) {\r\n            selectedurls.push(urls[i]);\r\n        }\r\n        selectedurls.forEach((url,index) => {\r\n            let pair = 0;\r\n            while (pair < 2) {\r\n                const randomNumber = Math.floor(Math.random() * cardsPerRowColumn);\r\n                if (!cardsPrev[randomNumber]) {\r\n                    cardsPrev[randomNumber] = { id: randomNumber, imageUrl: url, cardFound: true,availableToPick:false,pairNumber:index };\r\n                    pair++;\r\n                }\r\n            }\r\n        });\r\n        setCards([...cardsPrev]);\r\n        const timeout = setTimeout(() => {\r\n            console.log('Entro');\r\n            setCards(state => state.map(element => ({...element,cardFound:false,availableToPick:true})));\r\n        },7000);\r\n        return () => {\r\n            clearTimeout(timeout);\r\n        }\r\n    },[cardsPerRowColumn]);\r\n    \r\n\r\n    const clickCard = (id) => {\r\n        \r\n        if(!Object.keys(selectedCard).length){\r\n            console.log(cards[id]);\r\n            setSelectedCard(cards[id]);\r\n            console.log(selectedCard)\r\n            setCards(cards.map(element => element.id === id ? { ...element,cardFound: true,availableToPick:false } : element ));\r\n        }\r\n        else {\r\n            \r\n            setCards(cards.map(element => element.id === id ? { ...element,cardFound: true,availableToPick:false } : {...element,availableToPick:false} ));\r\n            setTimeout(() => {\r\n                console.log('Sisi');\r\n                let pairAdded = false;\r\n                setCards(state => state.map(element => {\r\n                    if(element.cardFound && (element.id !== id && element.id !== selectedCard.id)){\r\n                        return element;\r\n                    } \r\n                    else if ( element.id === id || element.id === selectedCard.id ){\r\n                        if(selectedCard.pairNumber === cards[id].pairNumber){\r\n                            console.log(pairAdded);\r\n                            if(!pairAdded){                 \r\n                                context.addPair();\r\n                                pairAdded = true;\r\n                                if(context.correctPairs === (cardsPerRowColumn / 2)){\r\n                                   win(true);\r\n                                   \r\n                                }\r\n                            }\r\n                            return { ...element,cardFound: true,availableToPick:false}\r\n                        }\r\n                        return { ...element,cardFound: false,availableToPick:true};\r\n                    }\r\n                    else{\r\n                        return {...element,availableToPick:true};   \r\n                    }\r\n                   \r\n                }));\r\n                setSelectedCard({});\r\n              }, 800);\r\n        }\r\n       \r\n    }\r\n    \r\n    return (\r\n        <div style={{ marginTop: \"65px\" }} >\r\n            <Grid container>\r\n                {\r\n                   cards.length ? (cards.map(({ id, imageUrl,cardFound,availableToPick }) => {\r\n                        const cardProps = {\r\n                            id,\r\n                            imageUrl,\r\n                            cardFound,\r\n                            availableToPick,\r\n                            cardsPerRowColumn,\r\n                            clickCard\r\n                        }\r\n                        return <Grid key={id} item {...responsiveRows[cardsPerRowColumn]}> <Card key={id} {...cardProps} /></Grid>\r\n                    })): []\r\n                }\r\n            </Grid>\r\n            <Form totalSeconds={totalSeconds} cardsPerRowColumn={ cardsPerRowColumn}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Board;\r\n","import React from 'react';\r\n\r\n\r\nconst MyContext = React.createContext();\r\n\r\nexport default MyContext;","import React from 'react';\r\nimport { useState,useEffect } from 'react';\r\nimport MyContext from './MyContext';\r\n\r\nconst MyProvider = props => {\r\n    const [finishedGame,win] = useState(false);\r\n\r\n    return (\r\n     <MyContext.Provider\r\n        value={{\r\n        correctPairs:0,\r\n        finishedGame:false,\r\n         win:() => {win(true)},\r\n         addPair:function() {this.correctPairs++}\r\n        }}\r\n      >\r\n        {props.children}\r\n      </MyContext.Provider>\r\n    );\r\n  };\r\n  \r\n  export default MyProvider;\r\n  ","import React, { useContext, useEffect, useState } from 'react'\r\nimport Board from '../components/Board';\r\nconst Stoptwatch = ({cardsPerRowColumn,context,setTotalSeconds}) => {\r\n    const [seconds,setSeconds] = useState(0);\r\n    \r\n    useEffect(() => {\r\n        \r\n          const interval = setInterval(() => {\r\n            setSeconds(seconds => seconds + 1);\r\n          }, 1000);\r\n          if(context.correctPairs === (cardsPerRowColumn/2)){\r\n            clearInterval(interval);\r\n            setTotalSeconds(seconds);\r\n            }\r\n        \r\n         // clearInterval(interval);\r\n        \r\n        return () => clearInterval(interval);\r\n      }, [seconds]);\r\n    \r\n    return (\r\n        <div>\r\n           <h1>{seconds}</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Stoptwatch;","import React, { useState } from 'react'\r\nimport Board from '../components/Board';\r\nimport MyContext from '../components/MyContext';\r\nimport MyProvider from '../components/MyProvider';\r\nimport Stoptwatch from '../components/StopWatch';\r\n\r\nconst MemoPage = ({ history }) => {\r\n    const { cardsPerRowColumn } = history.location.state;\r\n    const [totalSeconds,setTotalSeconds] = useState(0);\r\n    return (\r\n        <MyProvider>\r\n                    <MyContext.Consumer>\r\n                    {\r\n                         context =>(\r\n                            <>\r\n                        <Stoptwatch cardsPerRowColumn={cardsPerRowColumn} context={context} setTotalSeconds={setTotalSeconds} />\r\n                        \r\n                            <Board cardsPerRowColumn={cardsPerRowColumn} context={context} totalSeconds={totalSeconds}  />  </>) }\r\n                           \r\n                        </MyContext.Consumer>\r\n        </MyProvider>\r\n    )\r\n}\r\n\r\nexport default MemoPage;\r\n","import React from 'react'\r\n\r\nconst ScoresPage = () => {\r\n    const highScores = JSON.parse(localStorage.getItem(\"highScores\")) || {12:[],24:[],48:[]};\r\n    return (\r\n        <div>\r\n            {\r\n                Object.entries(highScores).map(([totalCards,registries]) =>{\r\n                    return <div>\r\n                        <h1>{totalCards} cartas</h1>\r\n                        {registries.length ? registries.map(({name,seconds}) => {\r\n                            return <h1>{`${name}   ${seconds}s`}</h1>\r\n                        }) : <h1>N/A</h1>}\r\n                        </div>;\r\n                } )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ScoresPage;","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction StartPage({history}) {\r\n    const [selected, setSelected] = useState(12);\r\n    const difficulties = [\r\n        {\r\n            name: 'Pan comido',\r\n            size: '4x4',\r\n            cardsPerRowColumn:12,\r\n            message: 'Esta dificultad es lo mas facil que existe, es como quitarle un dulce a un bebe',\r\n            imgUrl: 'https://media-exp1.licdn.com/dms/image/C560BAQGUAafs66wjYA/company-logo_200_200/0/1519899823694?e=2159024400&v=beta&t=d834c9lZTFOJL-x9fS3Ll-hqeUGJWEliXHN_IS3hTPw'\r\n        },\r\n        {\r\n            name: 'Normalito',\r\n            size: '6x6',\r\n            cardsPerRowColumn:24,\r\n            message: 'Esta un poco mas dificil, pero aun es super pasable',\r\n            imgUrl: 'https://media-exp1.licdn.com/dms/image/C560BAQGUAafs66wjYA/company-logo_200_200/0/1519899823694?e=2159024400&v=beta&t=d834c9lZTFOJL-x9fS3Ll-hqeUGJWEliXHN_IS3hTPw'\r\n        },\r\n        {\r\n            name: 'Superhipermega dificil',\r\n            size: '8x8',\r\n            cardsPerRowColumn:48,\r\n            message: 'Esto ya es demasiado, quedaras traumado de tanta dificultad. God mode.',\r\n            imgUrl: 'https://media-exp1.licdn.com/dms/image/C560BAQGUAafs66wjYA/company-logo_200_200/0/1519899823694?e=2159024400&v=beta&t=d834c9lZTFOJL-x9fS3Ll-hqeUGJWEliXHN_IS3hTPw'\r\n        }\r\n    ];\r\n    return (<div className=\"difficulties\">\r\n        {\r\n            difficulties.map((elem) => {\r\n                return (<div className={`${selected === elem.cardsPerRowColumn ? 'selected' : ''} animate__animated animate__slideInLeft `} style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-between\" }} onClick={(e) => { console.log(elem.name); setSelected(elem.cardsPerRowColumn) }}>\r\n\r\n                    <div>\r\n                        <img style={{ height: \"20vh\", width: \"20vh\" }} src={elem.imgUrl}></img>\r\n                    </div>\r\n                    <div>\r\n                        <h1>{elem.name}</h1>\r\n                        <h1>{elem.size}</h1>\r\n\r\n                        <div className=\"text-align-left tooltip\">\r\n                            <i style={{ color: \"#48466d\" }} className=\"fas fa-question-circle\"></i>\r\n                            <span className=\"tooltiptext\">{elem.message}</span>\r\n                        </div>\r\n                    </div>\r\n                </div>);\r\n            })\r\n        }\r\n        <div className=\"text-align-left\">\r\n                <i style={{ fontSize: \"2rem\" }} className=\"fas fa-angle-right\" onClick={() => {\r\n                    history.replace(\"/memorama\",{cardsPerRowColumn:selected});\r\n                }}></i>\r\n            \r\n        </div>\r\n        <div className=\"tooltip\" style={{ textAlign: \"center\", marginTop: \"50px\" }}>\r\n            <Link\r\n                to=\"/scores\"\r\n            >\r\n                <i style={{ fontSize: \"2rem\" }} className=\"fas fa-stopwatch\"></i>\r\n            </Link>\r\n\r\n            <div className=\"tooltiptext bottom\">\r\n                <span>Mejores tiempos</span>\r\n            </div>\r\n\r\n        </div>\r\n    </div>);\r\n}\r\nexport default StartPage;","import React from 'react';\r\n\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport ScoresPage from '../pages/ScoresPage';\r\nimport StartPage from '../pages/StartPage';\r\n\r\n\r\nconst StartRoutes = () => {\r\n    return (\r\n        <>\r\n            <div>\r\n                <Switch>\r\n                    <Route exact path=\"/\" component={StartPage} />\r\n                    <Route exact path=\"/scores\" component={ScoresPage} />\r\n                    <Redirect to=\"/\" />\r\n                </Switch>\r\n            </div>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\nexport default StartRoutes;","import {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Redirect\r\n} from \"react-router-dom\";\r\nimport MemoPage from \"../pages/MemoPage\";\r\nimport StartRoutes from \"./StartRoutes\";\r\n\r\nexport default function AppRouter() {\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <Route exact path=\"/memorama\" component={({history}) => history.action !== 'REPLACE' ? \r\n                                                            <Redirect to='/'/> : <MemoPage {...{history}} /> }  />\r\n                    <Route path=\"/\" component={StartRoutes} />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n\r\n    )\r\n}\r\n","import React from 'react'\r\nimport AppRouter from '../routers/AppRouter';\r\n\r\n\r\nconst App = () => {\r\n    return (\r\n       <AppRouter/>\r\n    )\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App/>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}